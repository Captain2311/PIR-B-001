<?xml version='1.0'?>
<launch>

  <!-- Load parameters for the controllers and other configurations -->
  <rosparam file="$(find pir-b-001)/config/pir_controllers.yaml" command="load"/>
  <rosparam file="$(find pir-b-001)/config/pir_param.yaml" command="load" /> 
  <rosparam file="$(find pir-b-001)/config/spring_param.yaml" command="load" /> 

  <!-- Send URDF to the parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find pir-b-001)/urdf/PIR-B-ASSY-001-integeration.xacro'" /> 

  <!-- Start Gazebo with an empty world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Push robot_description to factory and spawn robot in Gazebo -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" output="screen"
    args="-urdf -param robot_description -model pir -y -0.4"/>

  <!-- Start robot_state_publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/pir_b_001/joint_states" />
  </node>

  <!-- Start controller spawner after the robot is spawned in Gazebo -->
  <node name="controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false"
    output="screen" ns="/pir_b_001" args="spawn joint_state_controller right_wheel1j_controller left_wheel1j_controller front_omni_controller rear_omni_controller"/>

  <!-- Start controller spawner to spawn pipe in Gazebo -->
  <node
  name="spawn_model"
  pkg="gazebo_ros"
  type="spawn_model"
  args="-file $(find pir-b-001)/urdf/complex_pipe.urdf -urdf -model complex_pipe -z 0.078"
  output="screen" />

  <node pkg="rqt_gui" type="rqt_gui" name="rqt_gui" output="screen" />

</launch>
